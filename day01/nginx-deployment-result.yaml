apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-28T05:56:18Z"
    generation: 1
    labels:
      app: hello-minikube
    name: hello-minikube
    namespace: default
    resourceVersion: "2941"
    uid: c9cb8c8d-6c57-4c75-b68d-28e4dc0b9f4d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: hello-minikube
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: hello-minikube
      spec:
        containers:
        - image: kicbase/echo-server:1.0
          imagePullPolicy: IfNotPresent
          name: echo-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-28T05:56:35Z"
      lastUpdateTime: "2024-08-28T05:56:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-28T05:56:18Z"
      lastUpdateTime: "2024-08-28T05:56:35Z"
      message: ReplicaSet "hello-minikube-5c898d8489" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"nginx-deployment","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"name":"nginx-deployment"}},"template":{"metadata":{"labels":{"name":"nginx-deployment"}},"spec":{"containers":[{"image":"nginx","name":"nginx-deployment","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2024-09-14T06:20:00Z"
    generation: 1
    name: nginx-deployment
    namespace: default
    resourceVersion: "115784"
    uid: ff461619-8be9-42d9-965b-4257df49ff79
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: nginx-deployment
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: nginx-deployment
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx-deployment
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-09-14T06:20:13Z"
      lastUpdateTime: "2024-09-14T06:20:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-09-14T06:20:00Z"
      lastUpdateTime: "2024-09-14T06:20:13Z"
      message: ReplicaSet "nginx-deployment-5df66b75bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: List
metadata:
  resourceVersion: ""
